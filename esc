#!/usr/bin/env python2

import sqlite3
import sys
import time
import zlib

_VERSION = "0.0.1"

class ESC:

   def __init__(self, fn="esc.db"):
      self._conn = sqlite3.connect(fn) 

   def delete(self, k):
      if self.exists(k):
         c = self._conn.execute("DELETE FROM esc WHERE k = ?", (k,))
         self._conn.commit()

   def exists(self, k):
      c = self._conn.execute("SELECT k FROM esc where k = ?", (k,))
      c_list = c.fetchall()
      if len(c_list):
         return True
      return False

   def get(self, k):
      c = self._conn.execute("SELECT v FROM esc WHERE k = ?", (k,)) 
      c_list = c.fetchall()
      if len(c_list):
         # Update the timestamp, as we touched the cache.
         self._conn.execute("UPDATE esc SET ts = ? WHERE k = ?", (int(time.time()), k))
         self._conn.commit()
         return zlib.decompress(c_list[0][0])
      return None
   
   def init(self):
      self._conn.execute("CREATE TABLE IF NOT EXISTS esc(k VARCHAR(64) PRIMARY KEY, v BLOB, ts INTEGER)")

   def purge(self, older_than):
      c = self._conn.execute("DELETE FROM esc where ts < ?", int(time.time() - older_than))
      self._conn.commit()

   def put(self, k, v):
      if not self.exists(k):
         c = self._conn.execute("INSERT INTO esc VALUES (?, ?, ?)", (k, buffer(zlib.compress(v)), int(time.time())))
         self._conn.commit()

if "__main__" == __name__:
   esc = ESC()
   argv = sys.argv
   if len(argv) < 2:
      print("%s [delete|exists|get|init|purge|put|version] [arg]" % (argv[0],))
      sys.exit(0)
   cmd = argv[1]
   if cmd == "delete":
      esc.delete(argv[2])
   elif cmd == "exists":
      if esc.exists(argv[2]):
         print("True")
         sys.exit(0)
      print("False")
      sys.exit(1)
   elif cmd == "get":
      sys.stdout.write((esc.get(argv[2])))
   elif cmd == "init":
      esc.init()
   elif cmd == "purge":
      esc.purge(int(argv[2]))
   elif cmd == "put":
      v = sys.stdin.read()
      esc.put(argv[2], v)
   elif cmd == "version":
      print("esc version %s" % _VERSION)
   else:
      print("Unknown command.")
      sys.exit(1)
